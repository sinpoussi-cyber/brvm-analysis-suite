# ==============================================================================
# Workflow GitHub Actions pour la Suite d'Analyse BRVM Compl√®te (V2.0 - Final)
# ==============================================================================
name: Full BRVM Analysis Suite

on:
  schedule:
    # Ex√©cution quotidienne √† 07h00 UTC (08h00 en C√¥te d'Ivoire)
    - cron: '0 7 * * *'
  
  workflow_dispatch:
    inputs:
      force_analysis:
        description: 'Forcer l\'analyse m√™me avec peu de cl√©s API'
        required: false
        default: 'false'
        type: boolean

jobs:
  run-analysis-suite:
    runs-on: ubuntu-latest
    timeout-minutes: 480  # 8 heures pour √©viter les timeouts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Chrome for Selenium
        uses: browser-actions/setup-chrome@latest

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check API Keys availability
        env:
          GOOGLE_API_KEY_1: ${{ secrets.GOOGLE_API_KEY_1 }}
          GOOGLE_API_KEY_2: ${{ secrets.GOOGLE_API_KEY_2 }}
          GOOGLE_API_KEY_3: ${{ secrets.GOOGLE_API_KEY_3 }}
          GOOGLE_API_KEY_4: ${{ secrets.GOOGLE_API_KEY_4 }}
          GOOGLE_API_KEY_5: ${{ secrets.GOOGLE_API_KEY_5 }}
        run: |
          echo "V√©rification des cl√©s API disponibles..."
          count=0
          for i in {1..50}; do
            var_name="GOOGLE_API_KEY_$i"
            if [ ! -z "${!var_name}" ]; then
              count=$((count + 1))
            fi
          done
          echo "Nombre de cl√©s API d√©tect√©es: $count"
          if [ $count -eq 0 ]; then
            echo "ATTENTION: Aucune cl√© API d√©tect√©e - Mode d√©grad√©"
          fi

      - name: Run BRVM Analysis Suite
        env:
          GSPREAD_SERVICE_ACCOUNT: ${{ secrets.GSPREAD_SERVICE_ACCOUNT }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
          # Vos 9 cl√©s API existantes
          GOOGLE_API_KEY_1: ${{ secrets.GOOGLE_API_KEY_1 }}
          GOOGLE_API_KEY_2: ${{ secrets.GOOGLE_API_KEY_2 }}
          GOOGLE_API_KEY_3: ${{ secrets.GOOGLE_API_KEY_3 }}
          GOOGLE_API_KEY_4: ${{ secrets.GOOGLE_API_KEY_4 }}
          GOOGLE_API_KEY_5: ${{ secrets.GOOGLE_API_KEY_5 }}
          GOOGLE_API_KEY_6: ${{ secrets.GOOGLE_API_KEY_6 }}
          GOOGLE_API_KEY_7: ${{ secrets.GOOGLE_API_KEY_7 }}
          GOOGLE_API_KEY_8: ${{ secrets.GOOGLE_API_KEY_8 }}
          GOOGLE_API_KEY_9: ${{ secrets.GOOGLE_API_KEY_9 }}
        run: |
          python main.py
        continue-on-error: true  # Permet la suite m√™me en cas d'erreur partielle

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Logs-Execution-${{ github.run_number }}
          path: |
            *.log
          retention-days: 7

      - name: Upload All Reports Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Rapports-BRVM-Analyse-${{ github.run_number }}
          path: |
            ./Rapport_*.docx
            ./Synthese_*.docx
          retention-days: 30

      - name: Summary
        if: always()
        run: |
          echo "=== R√âSUM√â D'EX√âCUTION ==="
          if [ -f "brvm_analysis.log" ]; then
            echo "üìã Logs g√©n√©r√©s - v√©rifiez les artifacts"
            echo "Derni√®res lignes du log:"
            tail -20 brvm_analysis.log
          fi
          if ls Rapport_*.docx 1> /dev/null 2>&1; then
            echo "‚úÖ Rapports g√©n√©r√©s avec succ√®s"
            ls -la Rapport_*.docx Synthese_*.docx 2>/dev/null || echo "Aucun fichier de synth√®se"
          else
            echo "‚ö†Ô∏è Aucun rapport g√©n√©r√©"
          fi
          echo "üîç V√©rifiez les artifacts pour les d√©tails complets"
